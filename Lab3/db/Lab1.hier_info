|Lab1
CLK => comb.DATAIN
K_I[0] => comb.DATAIN
K_I[1] => comb.DATAIN
K_I[2] => comb.DATAIN
K_I[3] => comb.DATAIN
K_O[0] <> tristate:ts.port1
K_O[1] <> tristate:ts.port1
K_O[2] <> tristate:ts.port1
K_O[3] <> tristate:ts.port1
Nickel => comb.DATAIN
Dime => comb.DATAIN
Quarter => comb.DATAIN
Dollar => comb.DATAIN


|Lab1|CLKDIV:divider
CLK => count[0].CLK
CLK => count[1].CLK
CLK => count[2].CLK
CLK => count[3].CLK
CLK => count[4].CLK
CLK => count[5].CLK
CLK => count[6].CLK
CLK => count[7].CLK
CLK => count[8].CLK
CLK => count[9].CLK
CLK => count[10].CLK
CLK => count[11].CLK
CLK => count[12].CLK
CLK => count[13].CLK
CLK => count[14].CLK
CLK => CLK_1k~reg0.CLK


|Lab1|KP_top:kp
CLK => CLK.IN3
K_I[0] => K_I[0].IN1
K_I[1] => K_I[1].IN1
K_I[2] => K_I[2].IN1
K_I[3] => K_I[3].IN1


|Lab1|KP_top:kp|KP_Scan:sc
CLK => count[0].CLK
CLK => count[1].CLK
EN => count[1].ENA
EN => count[0].ENA


|Lab1|KP_top:kp|KP_sMachine:stm
clk => load~reg0.CLK
clk => latch~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => state~2.DATAIN
en => Selector0.IN3
en => state.DATAB
en => Selector1.IN1
en => Selector1.IN2


|Lab1|KP_top:kp|KP_Latch:lc
ena => d_l[1].CLK
ena => d_l[2].CLK
ena => d_l[3].CLK
ena => d_l[5].CLK
ena => d_l[6].CLK
ena => d_l[7].CLK
d[0] => ~NO_FANOUT~
d[1] => d_l[1].DATAIN
d[2] => d_l[2].DATAIN
d[3] => d_l[3].DATAIN
d[4] => ~NO_FANOUT~
d[5] => d_l[5].DATAIN
d[6] => d_l[6].DATAIN
d[7] => d_l[7].DATAIN


|Lab1|KP_top:kp|KP_Key_BCD:as
clk => Ascii[0]~reg0.CLK
clk => Ascii[1]~reg0.CLK
clk => Ascii[2]~reg0.CLK
clk => Ascii[3]~reg0.CLK
clk => Ascii[4]~reg0.CLK
clk => Ascii[5]~reg0.CLK
clk => Ascii_valid~reg0.CLK
clk => state~1.DATAIN
valid => always0.IN1
valid => Equal1.IN3
valid => Equal2.IN3
valid => Ascii.DATAA
d[0] => Decoder0.IN3
d[0] => Equal0.IN2
d[1] => Decoder0.IN2
d[1] => Equal0.IN1
d[2] => Decoder0.IN1
d[2] => Equal0.IN0
d[3] => Decoder0.IN0
d[3] => Equal0.IN3


|Lab1|tristate:ts
in[0] => out[0].OE
in[1] => out[1].OE
in[2] => out[2].OE
in[3] => out[3].OE
out[0] <> out[0]
out[1] <> out[1]
out[2] <> out[2]
out[3] <> out[3]


|Lab1|coinSync:csync
clk => clk.IN4
n => n.IN1
di => di.IN1
q => q.IN1
do => do.IN1


|Lab1|coinSync:csync|inputSync:un
clk => sync~reg0.CLK
async => t1.CLK


|Lab1|coinSync:csync|inputSync:udi
clk => sync~reg0.CLK
async => t1.CLK


|Lab1|coinSync:csync|inputSync:uq
clk => sync~reg0.CLK
async => t1.CLK


|Lab1|coinSync:csync|inputSync:udo
clk => sync~reg0.CLK
async => t1.CLK


|Lab1|CoinCounter:ccnt
clk => coinCount[0]~reg0.CLK
clk => coinCount[1]~reg0.CLK
clk => coinCount[2]~reg0.CLK
clk => coinCount[3]~reg0.CLK
clk => coinCount[4]~reg0.CLK
clk => coinCount[5]~reg0.CLK
reset => coinCount[0]~reg0.ACLR
reset => coinCount[1]~reg0.ACLR
reset => coinCount[2]~reg0.ACLR
reset => coinCount[3]~reg0.ACLR
reset => coinCount[4]~reg0.ACLR
reset => coinCount[5]~reg0.ACLR
nickel => Decoder0.IN0
dime => Decoder0.IN1
quarter => Decoder0.IN2
dollar => Decoder0.IN3
down => Decoder0.IN4


|Lab1|coin_BCD:c_bcd
coinval[0] => nickelrom.RADDR
coinval[1] => nickelrom.RADDR1
coinval[2] => nickelrom.RADDR2
coinval[3] => nickelrom.RADDR3
coinval[4] => nickelrom.RADDR4
coinval[5] => nickelrom.RADDR5


|Lab1|MultiplexedDisplay:lb
CLK => CLK.IN1
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
C[0] => C[0].IN1
C[1] => C[1].IN1
C[2] => C[2].IN1
C[3] => C[3].IN1


|Lab1|MultiplexedDisplay:lb|PRIORITY_N_COUNTER:pc
CLK => COUNT[0]~reg0.CLK
CLK => COUNT[1]~reg0.CLK


|Lab1|MultiplexedDisplay:lb|MUX4_1x4:m
SEL[0] => Mux0.IN1
SEL[0] => Mux1.IN1
SEL[0] => Mux2.IN1
SEL[0] => Mux3.IN1
SEL[1] => Mux0.IN0
SEL[1] => Mux1.IN0
SEL[1] => Mux2.IN0
SEL[1] => Mux3.IN0
InputA[0] => Mux3.IN2
InputA[1] => Mux2.IN2
InputA[2] => Mux1.IN2
InputA[3] => Mux0.IN2
InputB[0] => Mux3.IN3
InputB[1] => Mux2.IN3
InputB[2] => Mux1.IN3
InputB[3] => Mux0.IN3
InputC[0] => Mux3.IN4
InputC[1] => Mux2.IN4
InputC[2] => Mux1.IN4
InputC[3] => Mux0.IN4
InputD[0] => Mux3.IN5
InputD[1] => Mux2.IN5
InputD[2] => Mux1.IN5
InputD[3] => Mux0.IN5


|Lab1|MultiplexedDisplay:lb|BCD_7SEG:b
BCD[0] => Decoder0.IN3
BCD[1] => Decoder0.IN2
BCD[2] => Decoder0.IN1
BCD[3] => Decoder0.IN0


