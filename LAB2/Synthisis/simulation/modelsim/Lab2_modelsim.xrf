vendor_name = ModelSim
source_file = 1, C:/Users/robopanda333/Documents/QuartusProjects/APLD_CST_351/LAB2/Synthisis/KP/KP_top.v
source_file = 1, C:/Users/robopanda333/Documents/QuartusProjects/APLD_CST_351/LAB2/Synthisis/KP/KP_sMachine.v
source_file = 1, C:/Users/robopanda333/Documents/QuartusProjects/APLD_CST_351/LAB2/Synthisis/KP/KP_Scan.v
source_file = 1, C:/Users/robopanda333/Documents/QuartusProjects/APLD_CST_351/LAB2/Synthisis/KP/KP_Read.v
source_file = 1, C:/Users/robopanda333/Documents/QuartusProjects/APLD_CST_351/LAB2/Synthisis/KP/KP_Latch.v
source_file = 1, C:/Users/robopanda333/Documents/QuartusProjects/APLD_CST_351/LAB2/Synthisis/KP/KP_Key_Ascii.v
source_file = 1, C:/Users/robopanda333/Documents/QuartusProjects/APLD_CST_351/LAB2/Synthisis/SPI.v
source_file = 1, C:/Users/robopanda333/Documents/QuartusProjects/APLD_CST_351/LAB2/Synthisis/Lab2.v
source_file = 1, C:/Users/robopanda333/Documents/QuartusProjects/APLD_CST_351/LAB2/Synthisis/Controller.v
source_file = 1, C:/Users/robopanda333/Documents/QuartusProjects/APLD_CST_351/LAB2/Synthisis/CLKDIV.v
source_file = 1, C:/Users/robopanda333/Documents/QuartusProjects/APLD_CST_351/LAB2/Synthisis/db/Lab2.cbx.xml
source_file = 1, C:/Users/robopanda333/Documents/QuartusProjects/APLD_CST_351/LAB2/Synthisis/rom.txt
design_name = Lab2
instance = comp, \CLK~I , CLK, Lab2, 1
instance = comp, \K_I[1]~I , K_I[1], Lab2, 1
instance = comp, \K_I[2]~I , K_I[2], Lab2, 1
instance = comp, \K_I[3]~I , K_I[3], Lab2, 1
instance = comp, \K_I[0]~I , K_I[0], Lab2, 1
instance = comp, \kp|WideAnd0~0 , kp|WideAnd0~0, Lab2, 1
instance = comp, \kp|sc|count[0] , kp|sc|count[0], Lab2, 1
instance = comp, \kp|sc|count[1] , kp|sc|count[1], Lab2, 1
instance = comp, \kp|sc|Decoder0~0 , kp|sc|Decoder0~0, Lab2, 1
instance = comp, \kp|stm|state.s_PRESSED , kp|stm|state.s_PRESSED, Lab2, 1
instance = comp, \kp|stm|load , kp|stm|load, Lab2, 1
instance = comp, \kp|stm|Selector1~0 , kp|stm|Selector1~0, Lab2, 1
instance = comp, \kp|stm|latch , kp|stm|latch, Lab2, 1
instance = comp, \kp|lc|d_l[5] , kp|lc|d_l[5], Lab2, 1
instance = comp, \kp|lc|d_l[6] , kp|lc|d_l[6], Lab2, 1
instance = comp, \kp|lc|d_l[7] , kp|lc|d_l[7], Lab2, 1
instance = comp, \cckdv|count[0] , cckdv|count[0], Lab2, 1
instance = comp, \cckdv|count[1] , cckdv|count[1], Lab2, 1
instance = comp, \cckdv|count[2] , cckdv|count[2], Lab2, 1
instance = comp, \cckdv|count[3] , cckdv|count[3], Lab2, 1
instance = comp, \cckdv|count[4] , cckdv|count[4], Lab2, 1
instance = comp, \cckdv|count[5] , cckdv|count[5], Lab2, 1
instance = comp, \cckdv|count[6] , cckdv|count[6], Lab2, 1
instance = comp, \cckdv|count[7] , cckdv|count[7], Lab2, 1
instance = comp, \cckdv|count[8] , cckdv|count[8], Lab2, 1
instance = comp, \cckdv|count[9] , cckdv|count[9], Lab2, 1
instance = comp, \cckdv|count[10] , cckdv|count[10], Lab2, 1
instance = comp, \cckdv|count[11] , cckdv|count[11], Lab2, 1
instance = comp, \cckdv|count[12] , cckdv|count[12], Lab2, 1
instance = comp, \cckdv|count[13] , cckdv|count[13], Lab2, 1
instance = comp, \cckdv|count[14] , cckdv|count[14], Lab2, 1
instance = comp, \cckdv|LessThan0~0 , cckdv|LessThan0~0, Lab2, 1
instance = comp, \cckdv|LessThan0~1 , cckdv|LessThan0~1, Lab2, 1
instance = comp, \cckdv|LessThan0~2 , cckdv|LessThan0~2, Lab2, 1
instance = comp, \cckdv|LessThan0~3 , cckdv|LessThan0~3, Lab2, 1
instance = comp, \cckdv|CLK_1k , cckdv|CLK_1k, Lab2, 1
instance = comp, \spi|count[0] , spi|count[0], Lab2, 1
instance = comp, \spi|count[1] , spi|count[1], Lab2, 1
instance = comp, \spi|count[2] , spi|count[2], Lab2, 1
instance = comp, \spi|Add0~0 , spi|Add0~0, Lab2, 1
instance = comp, \spi|count[3] , spi|count[3], Lab2, 1
instance = comp, \spi|state.s_ss_to_off , spi|state.s_ss_to_off, Lab2, 1
instance = comp, \cnt|state.s_waitInt , cnt|state.s_waitInt, Lab2, 1
instance = comp, \cnt|Add0~11 , cnt|Add0~11, Lab2, 1
instance = comp, \kp|lc|d_l[1] , kp|lc|d_l[1], Lab2, 1
instance = comp, \kp|lc|d_l[2] , kp|lc|d_l[2], Lab2, 1
instance = comp, \kp|lc|d_l[3] , kp|lc|d_l[3], Lab2, 1
instance = comp, \kp|lc|WideOr0~0 , kp|lc|WideOr0~0, Lab2, 1
instance = comp, \kp|lc|Decoder0~0 , kp|lc|Decoder0~0, Lab2, 1
instance = comp, \kp|as|Ascii[0] , kp|as|Ascii[0], Lab2, 1
instance = comp, \kp|as|Ascii_valid , kp|as|Ascii_valid, Lab2, 1
instance = comp, \kp|as|state.s_second , kp|as|state.s_second, Lab2, 1
instance = comp, \kp|as|state.s_back , kp|as|state.s_back, Lab2, 1
instance = comp, \kp|as|state.s_first , kp|as|state.s_first, Lab2, 1
instance = comp, \kp|as|WideOr5~1 , kp|as|WideOr5~1, Lab2, 1
instance = comp, \kp|as|Ascii[1] , kp|as|Ascii[1], Lab2, 1
instance = comp, \kp|as|WideOr3~2 , kp|as|WideOr3~2, Lab2, 1
instance = comp, \kp|as|Ascii[3] , kp|as|Ascii[3], Lab2, 1
instance = comp, \kp|as|Ascii[2] , kp|as|Ascii[2], Lab2, 1
instance = comp, \kp|as|WideOr2~0 , kp|as|WideOr2~0, Lab2, 1
instance = comp, \kp|as|Ascii[5] , kp|as|Ascii[5], Lab2, 1
instance = comp, \kp|as|Ascii[6] , kp|as|Ascii[6], Lab2, 1
instance = comp, \cnt|WideOr0~0 , cnt|WideOr0~0, Lab2, 1
instance = comp, \cnt|Selector2~1 , cnt|Selector2~1, Lab2, 1
instance = comp, \cnt|Selector2~2 , cnt|Selector2~2, Lab2, 1
instance = comp, \cnt|state.s_Keypad_idle , cnt|state.s_Keypad_idle, Lab2, 1
instance = comp, \cnt|state.s_Keypad_send , cnt|state.s_Keypad_send, Lab2, 1
instance = comp, \cnt|state.s_Keypad_wait , cnt|state.s_Keypad_wait, Lab2, 1
instance = comp, \cnt|Selector2~0 , cnt|Selector2~0, Lab2, 1
instance = comp, \cnt|state.s_idle , cnt|state.s_idle, Lab2, 1
instance = comp, \cnt|Add0~5 , cnt|Add0~5, Lab2, 1
instance = comp, \cnt|address[0] , cnt|address[0], Lab2, 1
instance = comp, \cnt|Add0~6 , cnt|Add0~6, Lab2, 1
instance = comp, \cnt|address[1] , cnt|address[1], Lab2, 1
instance = comp, \cnt|Add0~16 , cnt|Add0~16, Lab2, 1
instance = comp, \cnt|address[2] , cnt|address[2], Lab2, 1
instance = comp, \cnt|Add0~21 , cnt|Add0~21, Lab2, 1
instance = comp, \cnt|address[3] , cnt|address[3], Lab2, 1
instance = comp, \cnt|Add0~0 , cnt|Add0~0, Lab2, 1
instance = comp, \cnt|address[4] , cnt|address[4], Lab2, 1
instance = comp, \cnt|Equal0~0 , cnt|Equal0~0, Lab2, 1
instance = comp, \cnt|Equal0~1 , cnt|Equal0~1, Lab2, 1
instance = comp, \cnt|state.s_sendData , cnt|state.s_sendData, Lab2, 1
instance = comp, \spi|state.s_idle , spi|state.s_idle, Lab2, 1
instance = comp, \spi|state.s_ss_to_on , spi|state.s_ss_to_on, Lab2, 1
instance = comp, \spi|state.s_shifting , spi|state.s_shifting, Lab2, 1
instance = comp, \spi|s_clk~0 , spi|s_clk~0, Lab2, 1
instance = comp, \cnt|WideOr5 , cnt|WideOr5, Lab2, 1
instance = comp, \cnt|mem~6 , cnt|mem~6, Lab2, 1
instance = comp, \cnt|mem~7 , cnt|mem~7, Lab2, 1
instance = comp, \cnt|mem~8 , cnt|mem~8, Lab2, 1
instance = comp, \cnt|mem~9 , cnt|mem~9, Lab2, 1
instance = comp, \spi|U1|tmp~1 , spi|U1|tmp~1, Lab2, 1
instance = comp, \spi|U1|tmp~2 , spi|U1|tmp~2, Lab2, 1
instance = comp, \spi|U1|tmp[0] , spi|U1|tmp[0], Lab2, 1
instance = comp, \cnt|mem~10 , cnt|mem~10, Lab2, 1
instance = comp, \cnt|mem~11 , cnt|mem~11, Lab2, 1
instance = comp, \spi|U1|tmp[1] , spi|U1|tmp[1], Lab2, 1
instance = comp, \spi|U1|tmp[2] , spi|U1|tmp[2], Lab2, 1
instance = comp, \spi|U1|tmp[3] , spi|U1|tmp[3], Lab2, 1
instance = comp, \cnt|mem~4 , cnt|mem~4, Lab2, 1
instance = comp, \cnt|mem~5 , cnt|mem~5, Lab2, 1
instance = comp, \spi|U1|tmp[4] , spi|U1|tmp[4], Lab2, 1
instance = comp, \cnt|mem~2 , cnt|mem~2, Lab2, 1
instance = comp, \cnt|mem~3 , cnt|mem~3, Lab2, 1
instance = comp, \spi|U1|tmp[5] , spi|U1|tmp[5], Lab2, 1
instance = comp, \cnt|mem~0 , cnt|mem~0, Lab2, 1
instance = comp, \cnt|mem~1 , cnt|mem~1, Lab2, 1
instance = comp, \spi|U1|tmp[6] , spi|U1|tmp[6], Lab2, 1
instance = comp, \spi|U1|tmp[7] , spi|U1|tmp[7], Lab2, 1
instance = comp, \spi|U1|so , spi|U1|so, Lab2, 1
instance = comp, \LED_RIGHT[0]~I , LED_RIGHT[0], Lab2, 1
instance = comp, \LED_RIGHT[1]~I , LED_RIGHT[1], Lab2, 1
instance = comp, \LED_RIGHT[2]~I , LED_RIGHT[2], Lab2, 1
instance = comp, \LED_RIGHT[3]~I , LED_RIGHT[3], Lab2, 1
instance = comp, \LED_LEFT[0]~I , LED_LEFT[0], Lab2, 1
instance = comp, \LED_LEFT[1]~I , LED_LEFT[1], Lab2, 1
instance = comp, \LED_LEFT[2]~I , LED_LEFT[2], Lab2, 1
instance = comp, \LED_LEFT[3]~I , LED_LEFT[3], Lab2, 1
instance = comp, \SEG[0]~I , SEG[0], Lab2, 1
instance = comp, \SEG[1]~I , SEG[1], Lab2, 1
instance = comp, \SEG[2]~I , SEG[2], Lab2, 1
instance = comp, \SEG[3]~I , SEG[3], Lab2, 1
instance = comp, \SEG[4]~I , SEG[4], Lab2, 1
instance = comp, \SEG[5]~I , SEG[5], Lab2, 1
instance = comp, \SEG[6]~I , SEG[6], Lab2, 1
instance = comp, \COM[0]~I , COM[0], Lab2, 1
instance = comp, \COM[1]~I , COM[1], Lab2, 1
instance = comp, \COM[2]~I , COM[2], Lab2, 1
instance = comp, \DP~I , DP, Lab2, 1
instance = comp, \COM4~I , COM4, Lab2, 1
instance = comp, \sClk~I , sClk, Lab2, 1
instance = comp, \sOut~I , sOut, Lab2, 1
instance = comp, \sIn~I , sIn, Lab2, 1
instance = comp, \sSS~I , sSS, Lab2, 1
instance = comp, \K_O[0]~I , K_O[0], Lab2, 1
instance = comp, \K_O[1]~I , K_O[1], Lab2, 1
instance = comp, \K_O[2]~I , K_O[2], Lab2, 1
instance = comp, \K_O[3]~I , K_O[3], Lab2, 1
